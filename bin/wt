#!/bin/sh

set -e

print_usage () {
	code=1
	if [ -n "$1" ]; then
		code=$1
	fi

	echo 'Usage:\n'
	echo 'wt <add|a> [worktree_dir]'
	echo 'wt <remove|rm>'
	echo 'wt <clone> <remote-url> [destination] [--bare]'

	exit $code
}

if [ $# -eq 0 ]; then
	print_usage
fi

git_dir () {
	if [ -d ".bare" ]; then
		echo "-C .bare"
	else
		echo ""
	fi
}

add () {
	worktree=$(
		git $(git_dir) branch --list | \
		awk '{ print $NF }' | \
		fzf
	)

	if [ "$1" ]; then
		worktree_dir="$1"
	else
		worktree_dir="$worktree"
	fi

	if [ "$(git_dir)" ]; then
		worktree_dir="../$worktree_dir"
	fi

	git $(git_dir) worktree add $worktree_dir $worktree
}

remove () {
	to_remove=$(
		git $(git_dir) worktree list --porcelain | \
		grep worktree | \
		awk '{print $NF}' | \
		fzf
	)
	git $(git_dir) worktree remove $to_remove
	echo "Removed worktree:" $to_remove
}

clone () {
	remote_url=$1
	if [ "$2" = "--bare" ]; then
		bare="--bare"
	else
		destination=$2
		bare=$3
	fi

	main_dir="./"
	clone_dir=$(
		echo $(basename $remote_url) | \
		awk -F '.' '{ print $1 }'
	)

	if [ -n "$destination" ]; then
		clone_dir=$destination
	fi
	if [ "$bare" = "--bare" ]; then
		clone_dir="$clone_dir/.bare"
		main_dir="../"
	fi

	git clone --bare $remote_url $clone_dir
	main_branch=$(
		git -C $clone_dir branch --list | \
		grep '*' | \
		awk '{print $NF}'
	)
	git -C $clone_dir worktree add \
		$main_dir/$main_branch \
		$main_branch
}

cmd=$1
case $cmd in
	"add" | "a")
		add $2
		;;
	"remove" | "rm")
		remove
		;;
	"clone")
		if [ $# -lt 2 ]; then
			echo "Remote URL required."
			print_usage
		fi
		clone $2 $3 $4
		;;
	"-h" | "--help" | "help")
		print_usage 0
		;;
	*)
		echo "wt: invalid command: $cmd"
		print_usage
		;;
esac

